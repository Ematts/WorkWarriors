@model WorkWarriors.Models.CompletedBids

@{
    ViewBag.Title = "Payment";
}

<h2>Payment</h2>


@using (Html.BeginForm("PaymentWithPaypal", "PayPal", Model.ID))
{
    <div>
        @Html.AntiForgeryToken()
        <h4>ServiceRequest</h4>
        <hr />
        <dl class="dl-horizontal">

            <dt>
                @Html.DisplayNameFor(model => model.ConUsername)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ConUsername)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.HomeUsername)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.HomeUsername)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.ConFirstName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ConFirstName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.HomeFirstname)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.HomeFirstname)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.ConLastName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ConLastName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.HomeLastName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.HomeLastName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.ConAddress)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ConAddress)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.HomeAddress)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.HomeAddress)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.ConCity)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ConCity)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.HomeCity)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.HomeCity)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.ConState)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ConState)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.HomeState)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.HomeState)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.ConZip)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ConZip)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.HomeZip)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.HomeZip)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.ConEmail)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ConEmail)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.HomeEmail)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.HomeEmail)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.PostedDate)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.PostedDate)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Bid)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Bid)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.CompletionDeadline)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.CompletionDeadline)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Description)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Description)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Completed)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Completed)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Invoice)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Invoice)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Service_Number)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Service_Number)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Expired)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Expired)
            </dd>

            @Html.HiddenFor(model => model.ID)
            <strong>Service Request Photos:</strong>
            <br>
            <br>

            @foreach (var item in Model.ServiceRequestPaths)
            {
                <div class="photocontainer">
                    <a href="~/images/@item.FileName"><img class="photo" src="~/images/@item.FileName" alt="" width="200" height="133" /></a>
                </div>

            }

            <strong>Contractor Photos:</strong>
            <br>
            <br>

            @foreach (var item in Model.CompletedPaths)
            {
                <div class="photocontainer">
                    <a href="~/images/@item.FileName"><img class="photo" src="~/images/@item.FileName" alt="" width="200" height="133" /></a>
                </div>

            }

        </dl>
   
    </div>
}
@*@{decimal price = Model.Bid; }
@{string service = Model.Description + " Invoice = " + Model.Invoice; }*@


@*<form action="https://www.sandbox.paypal.com/cgi-bin/webscr" method="post">

    <input type="hidden" name="cmd" value="_xclick" />
    <input type="hidden" name="business" value="workwarriors@gmail.com" />

    <input type="hidden" name="item_name" value="@service" />
    <input type="hidden" name="amount" value="@price" />
    <input type="submit" value="Pay Here!" />

</form>*@

@*<form action="https://www.sandbox.paypal.com/cgi-bin/webscr" method="post" target="_top">
    <input type="hidden" name="cmd" value="_s-xclick">
    <input type="hidden" name="hosted_button_id" value="9DHZ63JN726UG">
    <input type="hidden" name="item_name" value="@service" />
    <input type="hidden" name="amount" value="@price" />
    <input type="image" src="https://www.sandbox.paypal.com/en_US/i/btn/btn_paynowCC_LG.gif" border="0" name="submit" alt="PayPal - The safer, easier way to pay online!">
    <img alt="" border="0" src="https://www.sandbox.paypal.com/en_US/i/scr/pixel.gif" width="1" height="1">
</form>*@

@*<form action="https://www.sandbox.paypal.com/cgi-bin/webscr" method="post">

        <input type="hidden" name="cmd" value="_xclick" />
        <input type="hidden" name="business" value="workwarriors@gmail.com" />
        <input type="hidden" name="item_name" value="@service" />
        <input type="hidden" name="amount" value="@price" />
        <input type="hidden" value="http://localhost:14703/" name="return">
        <input type="hidden" value="Return to website" name="cbt">  
        <input type="submit" value="Pay Here!" />

    </form>*@
@*@using (Html.BeginForm("PayWithPaypal", "CompletedBids", Model.ID))
{
    @Html.HiddenFor(model => model.ID)*@
<script src="https://www.paypalobjects.com/js/external/dg.js" type="text/javascript"></script>
<h2>Make Payment</h2>
<!--Show Bid Details Here

    Then show long legal letter and have I accept checkbox,

    then paypal button

    Need to have a way to know when the transaction is complete to set Bids status to "Complete",
    can use this to query and put on My Investments page
     -->
@*@Html.ActionLink("Pay with Paypal Account", "Payment", "PP")*@
@*<a href="/youraction" data-paypal-button="true">
        <img src="//www.paypalobjects.com/en_US/i/btn/btn_paynow_LG.gif" alt="Pay Now" />
    </a>*@

@{string service = Model.Description + " Invoice = " + Model.Invoice; }
<form action="https://www.sandbox.paypal.com/webapps/adaptivepayment/flow/pay" target="PPDGFrame" class="standard">
    <label for="buy">Buy Now:</label>
    <input type="image" id="submitBtn" value="Pay with PayPal" src="https://www.paypalobjects.com/en_US/i/btn/btn_paynowCC_LG.gif">
    <input id="type" type="hidden" name="expType" value="light">
    <input id="paykey" type="hidden" name="paykey" value=@ViewData["paykey"]>
</form>
<script type="text/javascript" charset="utf-8">
var embeddedPPFlow = new PAYPAL.apps.DGFlow({ trigger: 'submitBtn' });
</script>
@*}*@
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ID }) |
    @Html.ActionLink("Back to List", "AdminPaymentsDue")
</p>
